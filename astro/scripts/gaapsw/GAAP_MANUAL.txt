Running PSF Gaussianization and GAaP codes
K.Kuijken
June 2016

This mini-manual describes how to obtain GAaP magnitudes for stars and
galaxies in wide-field images. GAaP stands for "Gaussian Aperture and PSF".

For a description of GAaP, see the Appendix of Kuijken et al 2015,
MNRAS 454, 3500.

The basic idea is to define pre-seeing Gaussian elliptical apertures
for a galaxy, and then measure the flux in this aperture from multiple
images with different filters. The resulting fluxes can be
ratioed to yield true average colours for the light from that
aperture, as needed for example for photometric redshifts. GAaP fluxes
are not total fluxes: in fact for optimal SNR it is best to make the
apertures of similar size to the galaxies.

There is no need for the different images to be astrometrically
aligned, or even to have the same orientation or pixel scale, provided
a WCS is given in the FITS header. The PSF radius can also be
different for the images taken through different filters: GAaP
compensates for this difference analytically.

The calculation is done in two stages: first the images are convolved
with a PSF-Gaussianization kernel, that renders the PSF close to
Gaussian with a width close to the native seeing for that image; then
the forced aperture photometry is done on these PSF-gaussianized
images. Error propagation takes the correlation of the noise due to
the convolution into account.


0. Setup the environment
==========================================================

For compilation instructions see shapelets-install.txt in the
shapelets/ subdirectory

Before running the code, set the environment variable GAaP to the
install directory where these scripts live: e.g., for tcsh

 setenv GAaP /disks/kuijken/gaapsw/
 setenv PGPLOT_DIR $GAaP/shapelets/lib/
 setenv PGPLOT_FONT $PGPLOT_DIR/grfont.dat

or for bash

 export GAaP=/disks/kuijken/gaapsw/
 export PGPLOT_DIR=$GAaP/shapelets/lib/
 export PGPLOT_FONT=$PGPLOT_DIR/grfont.dat

I. PSF_gaussianize the images
=============================

Ia: identify stars in the image, from which to measure the PSF
$GAaP/mkpsfcat.csh <image> <psfcat>
  (not needed if you can provide a PSF object catalogue)
  This code selects the vertical part of the stellar sequence in the
  radius-magnitude plot. May need some tuning for data of very
  different depth or image quality than kiDS. 

Ib: use the stars in the image to calculate the kernel, and do the convolutions
$GAaP/gpsf <image> <psfcat>
  This produces the files
  <image>.ggpsf.fits   - PSF-gaussianized image. The keyword GPSFSIG
    gives the sigma of the Gaussian PSF in pixels 
  <image>.ker.map   - shapelet description of the Gaussianization
    kernel. This file is needed to calculate the noise covariance
    introduced by the convolutions. 


II. Do the aperture photometry

$GAaP/gaap-corr.csh <cat> <image> <gpsfimage> <weight> <minaper> <maxaper> <kermap> <gaapcat>
  Requires as input
   cat: ascii catalogue of apertures for the forced photometry
        format: RA DEC (MAG) (MAGERR) (FLUXRAD) A_WORLD B_WORLD THETA_WORLD ID
             (fields in brackets are not used but a dummy is required)
             THETA_WORLD is defined as in SExtractor, North of East.
   image: pre-PSF-Gaussanization image
   gpsfimage: PSF-Gaussianized image from step I
   weight: inverse-variance weight image (e.g. from swarp)
   minaper: minimum aperture size to be used (typically 0.7") - sigma
   maxaper: maximum aperture size to be used (typically 2.0") - sigma
   kermap: shapelet description of convolution kernel from step I
  And generates output 
   gaapcat: ascii file with a GAaP flux for every input line
        format:  X pix, Y pix, A", B", PA deg, FGAAP, FGAAP_ERR, BG, FLG, ID, err
         where 
            X and Y are in the aperture's centre coordinates, in pixels 
	    A" and B" major and minor axes of the pre-seeing apertures used, 
	    PA the position angle of the major axis (-THETA_WORLD = N of W), 
	    FGAAP is the GAaP flux, (=0 in case of error)
	    FGAAP_ERR is the 1-sigma error, (=-1. in case of error)
	    BG is the background subtracted (currently disabled), 
	    FLG is a flag, (0: OK; 900: aperture smaller than PSF; 
	                           100: aperture off image)
	    ID is the input source ID, 
	    err is a naive error estimate (do not use).


